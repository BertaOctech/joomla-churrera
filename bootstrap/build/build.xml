<?xml version="1.0" encoding="UTF-8"?>

<project name="circularmarket" default="build">

    <property file="paths.build.properties" />
    <property name="builddir" value="./build" override="true" />

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare">
        <echo msg="Making directory ./build" />
        <mkdir dir="${builddir}" />

        <phingcall target="build-heptaformfields" />
		<phingcall target="build-modules" />
		<phingcall target="build-plugins" />
		<!--<phingcall target="fetch-gwejson-plugin" />-->
        <phingcall target="build-component" />
        <phingcall target="build-overrides" />
	</target>

	
    <!-- ==================================================  -->
    <!-- Target: JEvents gwejson Plugin    -->
    <!-- ==================================================  -->
    <target name="fetch-gwejson-plugin" description="Fetch GweJson Plugin">
        <echo msg="Fetching gwejson System Plugin..." />
        <!-- Export selected branch/tag from remote repository -->
		<svnexport 
            repositoryurl="https://github.com/JEvents/JEvents/trunk/plugins/gwejson"
            force="true"
            nocache="true"
			todir="${builddir}/gwejson" />
		<zip destfile="${builddir}/plg_system_gwejson.zip" basedir="${builddir}/gwejson/" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Hepta Form Fields                     -->
    <!-- ============================================  -->
    <target name="build-heptaformfields" description="Build Hepta Form Fields">
        <echo msg="Building Hepta Form Fields..." />
        <phing dir="${path.library.heptaformfields}/build" phingfile="build.xml" target="build" haltonfailure="true" inheritAll="false"/>
        <copy file="${path.library.heptaformfields}/build/lib_hepta_formfields.zip" tofile="${builddir}/lib_hepta_formfields.zip" />
    </target>

    <!-- ==================  -->
    <!-- Target: Plugins     -->
    <!-- ==================  -->
	<target name="build-plugins" description="Build Plugins">
		<property name="pluginFamilies" value="system,user,notifications" />
		<foreach list="${pluginFamilies}" param="pluginFamily" target="buildPlugin" />
	</target>

    <!-- ==================  -->
    <!-- Target: Modules     -->
    <!-- ==================  -->
	<target name="build-modules" description="Build Modules">
		<foreach param="moduleToLoad" target="buildModule" >
			<fileset dir="../modules/">
				<type type="dir" />
				<depth max="1" />
				<excludesfile name="excludedfiles.build"></excludesfile>
			</fileset>
		</foreach>
	</target>

	<!-- ============================================  -->
    <!-- Target: Build Module	 	     		       -->
    <!-- ============================================  -->
    <target name="buildModule" description="Build Modules Task">
        <copy todir="${builddir}/modules">
			<fileset dir="../modules/${moduleToLoad}">
                <include name="**"></include>
				<excludesfile name="excludedfiles.build"></excludesfile>
            </fileset>
        </copy>
		<echo msg="Building Moduel ${moduleToLoad} ..." />
        <fileset dir="${builddir}/modules" id="moduleThing">
			<include name="**"></include>
			<excludesfile name="excludedfiles.build"></excludesfile>
        </fileset>
		<zip destfile="${builddir}/${moduleToLoad}.zip" basedir="${builddir}/modules/" />
        <delete dir="${builddir}/modules" includeemptydirs="true" verbose="true" failonerror="true" />
	</target>


	<!-- ============================================  -->
    <!-- Target: Build Plugins	 	     		       -->
    <!-- ============================================  -->
    <target name="buildPlugin" description="Build Plugin Task">
        <copy todir="${builddir}/plugins">
			<fileset dir="../plugins/${pluginFamily}">
                <include name="**"></include>
				<excludesfile name="excludedfiles.build"></excludesfile>
            </fileset>
        </copy>
		<echo msg="Building ${pluginFamily} Plugin..." />
        <fileset dir="${builddir}/plugins" id="pluginUrlAccess">
			<include name="**"></include>
			<excludesfile name="excludedfiles.build"></excludesfile>
        </fileset>
		<zip destfile="${builddir}/plg_${pluginFamily}_circularmarket.zip" basedir="${builddir}/plugins/" />
        <delete dir="${builddir}/plugins" includeemptydirs="true" verbose="true" failonerror="true" />
	</target>

	<!-- ============================================  -->
    <!-- Target: Copy Plugin	 	     		       -->
    <!-- ============================================  -->
    <target name="copyPlugin" description="Copy Plugin Task">
		<copy file="${builddir}/${pluginPackage}" tofile="${builddir}/package/${pluginPackage}" />
	</target>

	<!-- ============================================  -->
    <!-- Target: Copy Module	 	     		       -->
    <!-- ============================================  -->
    <target name="copyModule" description="Copy Module Task">
		<copy file="${builddir}/${moduleToPack}" tofile="${builddir}/package/${moduleToPack}" />
	</target>
	
    <!-- ============================================  -->
    <!-- Target: circularmarket Component       -->
    <!-- ============================================  -->
    <target name="build-component" description="Build Component">
        <copy todir="${builddir}/component">
            <fileset dir="../component" defaultexcludes="true">
				<include name="**"></include>
				<excludesfile name="excludedfiles.build"></excludesfile>
            </fileset>
        </copy>
		
		<echo msg="Building EconomÃ­a Circular Component..." />
        <fileset dir="${builddir}/component" id="componentZip">
            <include name="**" />
			<exclude name="**/.svn/**"></exclude>
			<excludesfile name="excludedfiles.build"></excludesfile>
        </fileset>
        <zip destfile="${builddir}/com_circularmarket.zip" basedir="${builddir}/component/" />
        <delete dir="${builddir}/component" includeemptydirs="true" verbose="true" failonerror="true" />
    </target>

    <!-- ==================  -->
    <!-- Target: Overrides     -->
    <!-- ==================  -->
	<target name="build-overrides" description="Build Overrides">
        <copy todir="${builddir}/overrides">
			<fileset dir="../overrides/user_registration">
                <include name="**"></include>
				<excludesfile name="excludedfiles.build"></excludesfile>
            </fileset>
        </copy>
		<echo msg="Building Overrides ..." />
        <fileset dir="${builddir}/overrides" id="overrideThing">
			<include name="**"></include>
			<excludesfile name="excludedfiles.build"></excludesfile>
        </fileset>
		<zip destfile="${builddir}/file_cmoverrides.zip" basedir="${builddir}/" />
        <delete dir="${builddir}/overrides" includeemptydirs="true" verbose="true" failonerror="true" />
	</target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" depends="prepare">

        <echo msg="Creating Package..." />
        <copy todir="${builddir}/package">
            <fileset dir="../package">
                <include name="**"></include>
                <exclude name="**/.svn/**"></exclude>
				<excludesfile name="excludedfiles.build"></excludesfile>
            </fileset>
        </copy>
        <copy file="${builddir}/lib_hepta_formfields.zip" tofile="${builddir}/package/lib_hepta_formfields.zip" />
        <copy file="${builddir}/file_cmoverrides.zip" tofile="${builddir}/package/file_cmoverrides.zip" />
        <copy file="${builddir}/com_circularmarket.zip" tofile="${builddir}/package/com_circularmarket.zip" />
		<property name="pluginFamilies" value="system,user,search,content" />
		<foreach param="pluginPackage" target="copyPlugin">
			<fileset dir="${builddir}">
				<include name="plg_*.zip"/>
			</fileset>
		</foreach>
		<foreach param="moduleToPack" target="copyModule" >
			<fileset dir="${builddir}">
				<include name="mod_*.zip"/>
			</fileset>
		</foreach>
        <fileset dir="${builddir}/package" id="packagedir">
            <include name="**"></include>
            <exclude name="**/.svn/**"></exclude>
			<excludesfile name="excludedfiles.build"></excludesfile>
        </fileset>
        <zip destfile="${builddir}/../pkg_circularmarket.zip">
            <fileset refid="packagedir" />
        </zip>
        <delete dir="${builddir}" includeemptydirs="true" verbose="true" failonerror="true" />
    </target>

</project>
